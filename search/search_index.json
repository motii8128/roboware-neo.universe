{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"roboware-neo.universe Documentation","text":""},{"location":"#introduction","title":"Introduction","text":"<ul> <li>The Installation page explains the installation procedures for roboware-neo.universe and related tools.</li> <li>The Tutorials page describes how to operate the modules of roboware-neo.universe using simulators and other tools.</li> </ul>"},{"location":"api/","title":"API Document","text":""},{"location":"api/#mission-planner-strategy-api","title":"Mission Planner Strategy API","text":""},{"location":"api/#_1","title":"\u65e2\u5b9a\u30af\u30e9\u30b9","text":"<p>\u4e0b\u8a18\u306e\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u3066\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3059\u308b\u3053\u3068\u3067Strategy\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 <pre><code>class RWStrategy{\npublic:\n    virtual ~RWStrategy(){}\n    virtual void update(node_bin&amp; node, debug_info&amp; info) = 0;\n\nprotected:\n    rclcpp::Publisher&lt;rw_planning_msg::msg::TaskAction&gt;::SharedPtr pub_task_action_;\n    rw_planning_msg::msg::ActionResult action_result;\n    std::string strategy_label;\n};\n</code></pre></p> <p>\u4f5c\u6210\u4f8b\uff1a <pre><code>class StartStrategy : public RWStrategy\n{\npublic:\n    StartStrategy();\n    void update(node_bin&amp; node, debug_info&amp; info) override;\n};\n</code></pre></p> <p>\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6</p> <p>\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u306f\u4e0b\u8a18\u3092\u5fc5\u305a\u8a18\u8f09\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <pre><code>// \u547d\u4ee4\u53e5\u3092\u3053\u3053\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\nstrategy_label = \"HOGE\";\n</code></pre> <p><code>SETPOSE.1(SETPOSE:x=-2.0,y=2.0,z=270.0)</code>\u3053\u306e\u3088\u3046\u306a\u69cb\u6587\u306b\u5bfe\u5fdc\u3055\u305b\u305f\u3044\u5834\u5408\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8a18\u8f09\u3057\u307e\u3059\u3002</p> <pre><code>strategy_label = \"SETPOSE\";\n</code></pre> <p>Update</p> <p>update \u95a2\u6570\u3067\u306f\u4e0b\u8a18\u306eAPI\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3059\u3002</p> <ul> <li>rclcpp::Publisher::SharedPtr pub_task_action_;     - \u5916\u90e8\u306bTaskAction\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\u3067\u304d\u307e\u3059\u3002 <li>action_result     - \u30a2\u30af\u30b7\u30e7\u30f3\u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u5909\u6570\u306f\u30bf\u30b9\u30afID\u306b\u4e00\u81f4\u3059\u308b\u3088\u3046\u306b\u81ea\u52d5\u7684\u306b\u4e0e\u3048\u3089\u308c\u3066\u304a\u308a\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002</li>"},{"location":"control/joy_to_twist/","title":"joy_to_twist","text":"<p>\u30b2\u30fc\u30e0\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306e\u5165\u529b\u3092\u53d7\u3051\u53d6\u308b<code>joy_node</code>\u304b\u3089\u30d1\u30d7\u30d6\u30ea\u30c3\u30b7\u30e5\u3055\u308c\u308b\u30c7\u30fc\u30bf\u3092Twist\u578b\u306b\u5909\u63db\u3059\u308b\u30ce\u30fc\u30c9\u3002</p>"},{"location":"control/joy_to_twist/#package-url","title":"Package URL","text":"<p>repo url: control/joy_to_twist</p>"},{"location":"control/joy_to_twist/#launch","title":"Launch","text":"<p><code>joy.launch.xml</code>\u3092\u5b9f\u884c\u3059\u308b\u3068<code>joy_node</code>\u3068<code>joy_to_twist</code>\u304c\u8d77\u52d5\u3057\u307e\u3059\u3002\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3092\u63a5\u7d9a\u3059\u308b\u3068<code>Twist</code>\u304c\u30d1\u30d6\u30ea\u30c3\u30b7\u30e5\u3055\u308c\u307e\u3059\u3002</p> <pre><code>ros2 launch roboware_neo_launch joy.launch.xml\n</code></pre>"},{"location":"control/joy_to_twist/#topics","title":"Topics","text":"Name Type Description output/twist geometry_msgs::msg::Twist \u5909\u63db\u3055\u308c\u305fTwist\u30c7\u30fc\u30bf input/joy sensor_msgs::msg::Joy \u30b2\u30fc\u30e0\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306e\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308b"},{"location":"control/joy_to_twist/#parameters","title":"Parameters","text":"<p>\u3042\u308a\u307e\u305b\u3093</p>"},{"location":"installation/","title":"Source installation","text":""},{"location":"installation/#prerequisites","title":"Prerequisites","text":"<ul> <li>OS     - Ubuntu 22.04 LTS or macOS Sonoma</li> <li>ROS     - ROS 2 Humble</li> <li>Git</li> <li>pip</li> <li>curl</li> </ul> <pre><code>sudo apt update\nsudo apt install git curl python3-pip\n</code></pre>"},{"location":"installation/#set-up-development-environment","title":"Set up development environment","text":"<ol> <li> <p>Install CUDA and cuDNN (Optional)</p> <p>Please access the NVIDIA website and install CUDA 11.8 along with the corresponding cuDNN. Once you can execute <code>nvcc --version</code> the installation is complete.</p> </li> <li> <p>Install ROS 2</p> <pre><code>sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg\necho \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release &amp;&amp; echo $UBUNTU_CODENAME) main\" | sudo tee /etc/apt/sources.list.d/ros2.list &gt; /dev/null\nsudo apt update\nsudo apt install ros-humble-desktop ros-dev-tools\n</code></pre> </li> <li> <p>rosdep setup</p> <pre><code>sudo rosdep init\nrosdep update\n</code></pre> </li> <li> <p>Install PyTorch</p> <pre><code>python3 -m pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118\n</code></pre> </li> <li> <p>Workspace setup</p> <p><pre><code>mkdir -p ~/ros_ws/src\ncd ~/ros_ws/src\ngit clone https://github.com/hakoroboken/roboware-neo.universe.git\ncd ~/ros_ws\nrosdep install -y --from-paths src --ignore-src --skip-keys=OpenCV --skip-keys=PCL --rosdistro humble\n</code></pre> 6. Compile</p> <pre><code>colcon build --symlink-install --cmake-args -DCMAKE_BUILD_TYPE=Release\n</code></pre> </li> </ol>"},{"location":"installation/#additional-component-setup","title":"Additional Component Setup","text":"<ol> <li>Install Foxglove and MCAP.<pre><code>sudo apt install ros-humble-foxglove-bridge ros-humble-rosbag2-storage-mcap\n</code></pre> </li> </ol>"},{"location":"tutorials/","title":"Tutorials","text":""},{"location":"tutorials/#scenario-planning-simulation","title":"Scenario Planning Simulation","text":""},{"location":"tutorials/#basic-scenario","title":"Basic Scenario","text":"<p>This is a simulation to test a basic scenario.</p> <ol> <li> <p>Launch Roboware-neo:     <pre><code>ros2 launch roboware_neo_launch planning_sim.launch.xml\n</code></pre></p> <p></p> </li> <li> <p>Exit the simulation:</p> <p>Once the scenario has finished running, exit by pressing <code>ctrl-c</code> in the terminal.</p> </li> <li> <p>Check the scenario flow chart:</p> <p>Let's check the scenario that was just executed at <code>roboware-neo.universe/launch/roboware_neo_launch/state_graph/s-graph.md</code>. You will see that the SETPOSE command is executed three times.</p> <pre><code>graph TB\nSTART(START) --&gt; SETPOSE.1(SETPOSE:x=-0.8,y=2.0,z=90.0)\nSETPOSE.1 --&gt; SETPOSE.2(SETPOSE:x=-4.0,y=1.8,z=180.0)\nSETPOSE.2 --&gt; SETPOSE.3(SETPOSE:x=-0.9,y=0.9,z=270.0)\nSETPOSE.3 --&gt; END(END)</code></pre> </li> </ol>"},{"location":"tutorials/#if-statement-scenario","title":"If Statement Scenario","text":"<p>This scenario runs a more complex simulation involving if statements.</p> <ol> <li> <p>Edit the launch file:</p> <p>Edit <code>roboware-neo.universe/launch/roboware_neo_launch/launch/planning/mission_manager.launch.xml</code> as follows:</p> <pre><code>&lt;launch&gt;  \n    &lt;!-- &lt;arg name=\"graph_path\" default=\"$(find-pkg-share roboware_neo_launch)/state_graph/s-graph.md\"/&gt; --&gt;\n    &lt;arg name=\"graph_path\" default=\"$(find-pkg-share roboware_neo_launch)/state_graph/c-graph.md\"/&gt;\n    &lt;!-- &lt;arg name=\"graph_path\" default=\"$(find-pkg-share roboware_neo_launch)/state_graph/scenario_simulation/rotation.md\"/&gt; --&gt;\n    &lt;!-- &lt;arg name=\"graph_path\" default=\"$(find-pkg-share roboware_neo_launch)/state_graph/scenario_simulation/loop.md\"/&gt; --&gt;\n\n    &lt;node pkg=\"mission_manager\" exec=\"mission_manager_node\" output=\"screen\"&gt;\n        &lt;remap from=\"output/task_action\" to=\"/planning/state_transition/task_action\"/&gt;\n        &lt;remap from=\"input/action_result\" to=\"/planning/state_transition/action_result\"/&gt;\n        &lt;param name=\"graphpath\" value=\"$(var graph_path)\"/&gt;\n        &lt;param name=\"endmode\" value=\"shutdown\"/&gt;\n    &lt;/node&gt;\n\n    &lt;node pkg=\"mission_manager\" exec=\"ar_marker_strategy_node\" output=\"screen\"&gt;\n        &lt;remap from=\"output/action_result\" to=\"/planning/state_transition/action_result\"/&gt;\n        &lt;remap from=\"input/task_action\" to=\"/planning/state_transition/task_action\"/&gt;\n        &lt;remap from=\"input/marker\" to=\"/perception/ar_marker/marker\"/&gt;\n    &lt;/node&gt;\n&lt;/launch&gt;\n</code></pre> </li> <li> <p>Launch Roboware-neo:     <pre><code>ros2 launch roboware_neo_launch planning_sim.launch.xml\n</code></pre></p> <p></p> </li> <li> <p>Check the scenario flow chart:</p> <p>Check the executed scenario at <code>roboware-neo.universe/launch/roboware_neo_launch/state_graph/c-graph.md</code>. The flow chart shows an if-else branch where the robot either returns to the start position or moves backward based on whether it finds the marker ID-6. By default, it does not find ID-6 and moves backward.</p> <pre><code>graph TB\nSTART(START) --&gt; SETPOSE.1(SETPOSE:x=-2.0,y=2.0,z=270.0)\nSETPOSE.1 --&gt; FIND.1(FIND:type=armarker,name=6,var=id5pos)\nFIND.1 -- TRUE --&gt; SETPOSE.2(SETPOSE:x=-2.0,y=0.9,z=270.0)\nFIND.1 -- FALSE --&gt; SETPOSE.3(SETPOSE:x=-0.9,y=0.9,z=270.0)\nSETPOSE.2 --&gt; END(END)\nSETPOSE.3 --&gt; END(END)</code></pre> </li> <li> <p>Change the graph:</p> <p>Edit <code>roboware-neo.universe/launch/roboware_neo_launch/state_graph/c-graph.md</code> to change the marker ID to 5.</p> <p><pre><code>```mermaid\ngraph TB\nSTART(START) --&gt; SETPOSE.1(SETPOSE:x=-2.0,y=2.0,z=270.0)\nSETPOSE.1 --&gt; FIND.1(FIND:type=armarker,name=5,var=id5pos)\nFIND.1 -- TRUE --&gt; SETPOSE.2(SETPOSE:x=-2.0,y=0.9,z=270.0)\nFIND.1 -- FALSE --&gt; SETPOSE.3(SETPOSE:x=-0.9,y=0.9,z=270.0)\nSETPOSE.2 --&gt; END(END)\nSETPOSE.3 --&gt; END(END)\n</code></pre>   ```</p> </li> <li> <p>Launch Roboware-neo:</p> <pre><code>ros2 launch roboware_neo_launch planning_sim.launch.xml\n</code></pre> <p></p> </li> </ol>"}]}